import React, { useState, useEffect } from "react";
import axios from "axios";
import { jwtDecode } from "jwt-decode"; // Import jwt-decode ƒë·ªÉ gi·∫£i m√£ token
import manage from "../../assets/icons/manage.svg";
import care from "../../assets/icons/care.svg";
import donation from "../../assets/icons/donation.svg";
import online from "../../assets/icons/online.svg";
import information from "../../assets/icons/information.svg";
import user from "../../assets/img/user.svg";
import QR from '../../assets/img/QR.jpg'
import "./Overview.css";

const Overview = () => {
  const [favoriteCount, setFavoriteCount] = useState(0); // S·ªë ng∆∞·ªùi quan t√¢m b√†i vi·∫øt
  const [postCount, setPostCount] = useState(0); // T·ªïng s·ªë b√†i vi·∫øt ƒë√£ ƒëƒÉng
  const [error, setError] = useState(null); 
  const [isLoading, setIsLoading] = useState(false);
  const [isPopupVisible, setIsPopupVisible] = useState(false);

  useEffect(() => {
    const token = localStorage.getItem("token");
    if (!token) {
      setError("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ xem th√¥ng tin t·ªïng quan.");
      return;
    }

    const decodedToken = jwtDecode(token);
    const userId = decodedToken.id;
    setIsLoading(true);
    // G·ªçi API ƒë·ªÉ l·∫•y s·ªë l∆∞·ª£ng ng∆∞·ªùi quan t√¢m v√† s·ªë b√†i vi·∫øt ƒë√£ ƒëƒÉng
    const fetchOverviewData = async () => {
      try {
       
        const headers = {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`,
        };

        const favoriteResponse = await axios.get(
          `http://localhost:8080/api/v1/post-favorite/count-user/${userId}`,
          { headers }
        );

        if (favoriteResponse.data.status === 200) {
          setFavoriteCount(favoriteResponse.data.data);
        } else {
          setError("Kh√¥ng th·ªÉ l·∫•y s·ªë ng∆∞·ªùi quan t√¢m b√†i vi·∫øt.");
        }

        // L·∫•y t·ªïng s·ªë b√†i vi·∫øt ƒë√£ ƒëƒÉng
        const postResponse = await axios.get(
          `http://localhost:8080/api/v1/posts/user/${userId}`,
          { headers }
        );

        if (postResponse.data.status === 200 && postResponse.data.data) {
          setPostCount(postResponse.data.data.content.length);
        } else {
          setError("Kh√¥ng th·ªÉ l·∫•y s·ªë l∆∞·ª£ng b√†i vi·∫øt ƒë√£ ƒëƒÉng.");
        }
      } catch (err) {
        setError("ƒê√£ x·∫£y ra l·ªói khi t·∫£i d·ªØ li·ªáu.");
        console.error("Error fetching overview data: ", err);
      } finally {
        setIsLoading(false);
      }
    };

    fetchOverviewData();
  }, []);

  const handlePopupClose = () => setIsPopupVisible(false); // ƒê√≥ng popup
  const handleDonateClick = (e) => {
    e.preventDefault();
    console.log("Donate button clicked");

    setIsPopupVisible(true); // Hi·ªÉn th·ªã popup
  };

  if (error) {
    return <div>{error}</div>;
  }

  return (
    <div className="overview">
      <h1 className="overview-title">T·ªïng quan</h1>
      {isLoading ? (
        <div className="loading-spinner">
          <div className="spinner"></div>
        </div>
      ) : (
        <>
          <div className="overview-summary">
            {/* T·ªïng s·ªë b√†i ƒëƒÉng */}
            <div className="summary-item">
              <div className="summary-item-wrapper">
                <img
                  src={manage}
                  alt="Qu·∫£n l√Ω tin ƒëƒÉng"
                  className="overview-icon"
                />
                <h2 className="summary-item-title">Tin ƒëƒÉng</h2>
              </div>
              <p className="summary-item-news">{postCount} tin</p>
              <a href="/managepost" className="summary-item-link">
                Qu·∫£n l√Ω tin
              </a>
            </div>

            {/* T·ªïng s·ªë ng∆∞·ªùi quan t√¢m */}
            <div className="summary-item">
              <div className="summary-item-wrapper">
                <img
                  src={care}
                  alt="S·ªë ng∆∞·ªùi quan t√¢m"
                  className="overview-icon"
                />
                <h2 className="summary-item-title">S·ªë ng∆∞·ªùi quan t√¢m</h2>
              </div>
              <p className="summary-item-news">{favoriteCount} ng∆∞·ªùi</p>
              <a href="/#" className="summary-item-link">
                + 1 m·ªõi v√†o h√¥m nay
              </a>
            </div>

            {/* Donate */}
            <div className="summary-item">
              <div className="summary-item-wrapper">
                <img
                  src={donation}
                  alt="·ª¶ng h·ªô nh√† ph√°t tri·ªÉn"
                  className="overview-icon"
                />
                <h2 className="summary-item-title">·ª¶ng h·ªô nh√† ph√°t tri·ªÉn</h2>
              </div>
              <p className="summary-item-donated">
                H·ªó tr·ª£ nh√† ph√°t tri·ªÉn ƒë·ªÉ th√™m nhi·ªÅu t√≠nh nƒÉng h·ªØu √≠ch h∆°n
              </p>
              <a href="#/" className="summary-item-link" onClick={handleDonateClick}>
                Donate
              </a>
            </div>
          </div>
          <h2 className="section-title">Th√¥ng tin d√†nh ri√™ng cho b·∫°n</h2>
          <div className="overview-details">
            {/* Interaction */}
            <div className="details-interaction">
              <h3 className="details-interaction-heading">üî• T∆∞∆°ng t√°c</h3>
              <div className="details-interaction-box">
                <div className="details-interaction-wrapper">
                  <img src={online} alt="T∆∞∆°ng t√°c" className="detail-icon" />
                  <p className="details-interaction-subtitle">Tin ƒëƒÉng</p>
                </div>
                <p className="details-interaction-care">
                  C√≥ {favoriteCount} ng∆∞·ªùi quan t√¢m ƒë·∫øn tin ƒëƒÉng c·ªßa b·∫°n
                </p>
                <ul className="details-interaction-list">
                  <li className="details-interaction-item">
                    <img
                      src={user}
                      alt="User"
                      className="details-interaction-icon"
                    />{" "}
                    Ph·∫°m Nh·∫≠t Minh ƒë√£ quan t√¢m ƒë·∫øn tin ƒëƒÉng c·ªßa b·∫°n
                  </li>
                  <li className="details-interaction-item">
                    <img
                      src={user}
                      alt="User"
                      className="details-interaction-icon"
                    />{" "}
                    B√πi Quang ƒê·∫°o ƒë√£ quan t√¢m ƒë·∫øn tin ƒëƒÉng c·ªßa b·∫°n
                  </li>
                </ul>
              </div>
            </div>

            {/* Notifications */}
            <div className="details-notifications">
              <h3 className="details-notifications-heading">üîî Th√¥ng b√°o</h3>
              <div className="details-notifications-wrapper">
                <img src={information} alt="" className="notification-icon" />
                <p className="details-notifications-subtile">
                  Tin{" "}
                  <a href="#/" className="details-notifications-link">
                    #678910
                  </a>{" "}
                  s·∫Øp h·∫øt h·∫°n
                </p>
              </div>
            </div>
          </div>

          {/* Popup */}
          {isPopupVisible && (
            <div className="popup-overlay-overview">
              <div className="popup-content-overview">
                <h2 className="popup-overview-heading">Ch√∫ng t√¥i r·∫•t c·∫£m ∆°n ƒë·∫øn c√°c b·∫°n khi ƒë√£ ·ªßng h·ªô ƒë·ªôi ng≈© ph√°t tri·ªÉn b·ªçn t√¥i</h2>
                <img src={QR} alt="QR Code" className="popup-qr" />
                <button onClick={handlePopupClose} className="popup-close-overview">
                  &times;
                </button>
              </div>
            </div>
          )}

        </>
      )}
    </div>
  );
};

export default Overview;
